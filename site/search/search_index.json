{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"\u524d\u8a00","text":"<p>\u5927\u5bb6\u597d\uff0c\u6211\u662f\u8150\u70c2\u7684\u6a58\u5b50\u3002</p> <p>\u8fd9\u91cc\u662f\u6211\u7684\u4e2a\u4eba\u6280\u672f\u6587\u6863\uff0c\u5305\u62ec\u77e5\u8bc6\u56fe\u8c31\u5176\u4ed6\u6280\u672f\u6587\u7ae0\u3002</p>"},{"location":"#_1","title":"\u76ee\u5f55","text":""},{"location":"#_2","title":"\u6280\u672f\u56fe\u8c31","text":"<ul> <li>\u8ba1\u7b97\u673a\u7f51\u7edc</li> <li>\u64cd\u4f5c\u7cfb\u7edf</li> <li>\u7f16\u7a0b\u57fa\u7840</li> <li>\u6570\u636e\u5e93</li> <li>\u4e2d\u95f4\u4ef6</li> <li>\u9879\u76ee</li> </ul>"},{"location":"#_3","title":"\u5176\u4ed6\u6587\u7ae0","text":"<ol> <li>\u624b\u5199\u8bbf\u95ee\u63a7\u5236\u5217\u8868\uff08ACL\uff09</li> <li>\u5206\u5e03\u5f0f\u5168\u5c40\u552f\u4e00 ID \u5b9e\u73b0</li> </ol>"},{"location":"%E6%96%87%E7%AB%A0/ACLs/","title":"\u624b\u5199\u8bbf\u95ee\u63a7\u5236\u5217\u8868\uff08ACL\uff09","text":""},{"location":"%E6%96%87%E7%AB%A0/ACLs/#_1","title":"\u524d\u8a00","text":"<p>\u672c\u6587\u5148\u4ecb\u7ecd\u4e86\u8bbf\u95ee\u63a7\u5236\u5217\u8868\u7684\u57fa\u672c\u6982\u5ff5\uff0c\u7136\u540e\u5206\u522b\u901a\u8fc7\u6807\u51c6 ACL \uff08Standard ACL\uff09\u548c\u62d3\u5c55 ACL \uff08Extend ACL\uff09\u7684\u793a\u4f8b\u8ba9\u5927\u5bb6\u5b66\u4f1a\u624b\u5199 ACL\uff0c\u7531\u6b64\u6df1\u5165\u7406\u89e3\u8def\u7531\u5668\u5185\u90e8\u539f\u7406\u3002\u4e0d\u540c\u7684\u8def\u7531\u5668\u5185\u90e8\u7684 ACL \u89c4\u5219\u53ef\u80fd\u6709\u4e9b\u504f\u5dee\uff0c\u672c\u6587\u4ee5\u601d\u79d1\uff08Cisco\uff09\u8def\u7531\u5668\u4e3a\u4f8b\u3002\u53ef\u80fd\u534e\u4e3a\u6bd5\u7adf\u4f5c\u4e3a\u4e86\u56fd\u5185 4G\uff0c5G \u901a\u4fe1\u5efa\u8bbe\u7684\u91cd\u8981\u89d2\u8272\uff0c\u6240\u4ee5\u56fd\u5185\u5173\u4e8e ACL \u7684\u4ecb\u7ecd\u66f4\u591a\u548c\u534e\u4e3a\u76f8\u5173\u3002</p>"},{"location":"%E6%96%87%E7%AB%A0/ACLs/#_2","title":"\u57fa\u672c\u6982\u5ff5","text":"<p>\u8bbf\u95ee\u63a7\u5236\u5217\u8868\uff08Access Control Lists\uff0cACL\uff09\u662f\u5e94\u7528\u5728\u8def\u7531\u5668\u63a5\u53e3\u7684\u6307\u4ee4\u5217\u8868[1]\u3002\u6709\u4e86\u5b83\uff0c\u901a\u8fc7\u5728\u8def\u7531\u5668\u5185\u914d\u7f6e ACL\uff0c\u6211\u4eec\u53ef\u4ee5\u9650\u5236\u6216\u5141\u8bb8\u67d0\u4e9b ip \u5730\u5740\u6bb5\u7684\u6570\u636e\u5305\u8fdb\u5165\u8def\u7531\u5668\uff0c\u6216\u4ece\u8def\u7531\u5668\u8f6c\u51fa\u3002</p> <p></p> <p>\u5047\u8bbe R1 \u662f\u8def\u7531\u5668\uff0cE0 \u548c S0 \u662f\u8def\u7531\u5668\u7684\u4e24\u4e2a\u63a5\u53e3\uff1a</p> <ul> <li>\u6570\u636e\u5305\u4ece\u5c40\u57df\u7f51\u5230\u5e7f\u57df\u7f51\uff0cE0 \u662f ACL \u7684 in \u65b9\u5411\uff0cS0 \u662f ACL \u7684 out \u65b9\u5411</li> <li>\u6570\u636e\u5305\u4ece\u5e7f\u57df\u7f51\u5230\u5c40\u57df\u7f51\uff0cE0 \u662f ACL \u7684 out \u65b9\u5411\uff0cS0 \u662f ACL \u7684 in \u65b9\u5411</li> </ul> <p>\u5bf9\u4e8e\u5982\u4e0b\u8def\u7531\u5668\uff1a</p> <p></p> <p>\u5185\u90e8\u8def\u7531\u89c4\u5219\uff1a</p> <p></p>"},{"location":"%E6%96%87%E7%AB%A0/ACLs/#1-acl","title":"\u793a\u4f8b1 \uff1a\u624b\u5199 ACL","text":""},{"location":"%E6%96%87%E7%AB%A0/ACLs/#acl_1","title":"\u6807\u51c6 ACL","text":"<ul> <li>\u6bcf\u6761\u8bed\u53e5\u90fd\u6821\u9a8c IP \u6570\u636e\u5305\u7684\u6e90\u5730\u5740</li> <li>\u6839\u636e\u6821\u9a8c\u7ed3\u679c\u51b3\u5b9a\u5141\u8bb8/\u62d2\u7edd\u6570\u636e\u5305</li> </ul> <p>\u5982\u4f55\u624b\u5199\u6807\u51c6 ACL\uff1a</p> <ul> <li>\u7f16\u5199\u5141\u8bb8/\u62d2\u7edd\u7b56\u7565</li> <li>\u7f16\u5199\u8def\u7531\u5668\u63a5\u53e3</li> <li>\u5c06\u7b56\u7565\u7ed1\u5b9a\u5230\u8be5\u63a5\u53e3</li> </ul> <pre><code>access-list acl-number {permit/deny} source[mask]\naccess-list acl-number {permit/deny} source[mask]\ninterface interface-number\nip access-group acl-number {in/out}\n</code></pre> <p>mask \u8868\u793a\u63a9\u7801\uff0c\u7528\u4e8e\u6307\u5b9a\u57fa\u4e8e source \u7684 ip \u8303\u56f4\uff0c0 \u8868\u793a\u76f8\u5e94\u7684\u4f4d\u5fc5\u987b\u5339\u914d\uff0c1 \u8868\u793a\u4e0d\u5339\u914d</p> <p>\u793a\u4f8b 1: \u62d2\u7edd\u6765\u81ea 172.16.3.14 \u7684\u6570\u636e\u5305</p> <pre><code>access-list 1 deny 172.16.3.14 0.0.0.0\n                    |__________| | | |\n                        |________| | |\n                          |________| |\n                            |________|   \n</code></pre> <p>\u793a\u4f8b 2: \u5141\u8bb8\u6240\u6709\u6765\u81ea 172.16.0.0 \u7684\u6570\u636e\u5305</p> <pre><code>access-list  2  permit  172.16.0.0   0.0.255.255\n</code></pre> <p></p> <p>1\u3001\u4ec5\u5141\u8bb8\u7f51\u7edc 172.16.3.0 \u548c 172.16.4.0 \u4e0a\u7684 172.16.0.0 \u6d41\u91cf\u3002\uff08\u62d2\u7edd 3.0 \u548c 4.0 \u4e0a\u7684\u975e 172.16.0.0 \u7f51\u7edc\u6d41\u91cf\uff09</p> <pre><code>access-list 1 permit 172.12.0.0 0.0.255.255\ninterface E0\nip access-group 1 out\ninterface E1\nip access-group 1 out\n</code></pre> <p>\u4e3a\u4ec0\u4e48\u4e0d\u7ed1\u5b9a\u5728 in \u65b9\u5411\uff1f</p> <ul> <li>\u5982\u679c\u4e00\u4e2a\u65b0\u7684\u7f51\u7edc\uff08\u4f8b\u5982 172.16.5.0\uff09\u52a0\u5165\uff0cACL \u9700\u8981\u66f4\u6539</li> <li>\u6570\u636e\u5305\u8fdb\u5165\u8def\u7531\u5668\u524d\u4f1a\u88ab\u4e22\u5f03</li> </ul> <p>2\u3001\u5728 172.16.3.0 \u4e0a\u62d2\u7edd 172.16.4.13 \u7684\u6d41\u91cf\uff0c\u5728 172.16.3.0 \u4e0a\u4e5f\u53ea\u5141\u8bb8 172.16.0.0 \u7684\u6d41\u91cf</p> <pre><code>access-list  2  deny    172.16.4.13  0.0.0.0\naccess-list  2  permit  172.16.0.0   0.0.255.255\ninterface E0\nip access-group 2 out\n</code></pre> <p>3\u3001\u5728 172.16.3.0 \u4e0a\uff0c\u62d2\u7edd 172.16.4.0 \u7684\u6d41\u91cf\uff0c\u5141\u8bb8\u6240\u6709\u5176\u4ed6\u6765\u81ea 172.16.0.0 \u7684\u6d41\u91cf</p> <pre><code>access-list  3  deny    172.16.4.0   0.0.0.255\naccess-list  3  permit  172.16.0.0   0.0.255.255\ninterface E0\nip access-group 3 out\n</code></pre>"},{"location":"%E6%96%87%E7%AB%A0/ACLs/#acl_2","title":"\u62d3\u5c55 ACL","text":"<ul> <li>\u6bcf\u6761\u8bed\u53e5\u90fd\u4f1a\u68c0\u67e5IP\u6570\u636e\u5305\u7684\u6e90\u5730\u5740\u3001\u76ee\u7684\u5730\u5730\u5740\uff0c\u4ee5\u53ca\u53ef\u80fd\u7684\u534f\u8bae\uff08\u5982tcp\uff09\u548c\u7aef\u53e3\u53f7\uff08\u598221-ftp\uff09</li> <li>\u7ed3\u679c\u6839\u636e\u6e90\u5730\u5740\u3001\u76ee\u7684\u5730\u5730\u5740\u3001\u534f\u8bae\u548c\u7aef\u53e3\u53f7\u7684\u7ec4\u5408\u51b3\u5b9a\u5141\u8bb8/\u62d2\u7edd\u6570\u636e\u5305</li> </ul> <p>\u5982\u4f55\u624b\u5199\u62d3\u5c55 ACL\uff1a</p> <pre><code>access-list acl-number {permit/deny} protocol source source-mask  destination  destination-mask [eq port number]\naccess-list acl-number {permit/deny} protocol source source- mask destination destination-mask [eq port number]\ninterface      interface-number\nip access-group acl-number {in/out}\n</code></pre> <ul> <li>acl-number: 100~199</li> <li>protocol: tcp, udp, icmp, igmp, ip</li> </ul> <p>4\u3001\u62d2\u7edd 172.16.3.0 \u4e0a\u7684 FTP \u8bbf\u95ee\uff0c\u62d2\u7edd 3.0 \u4e0a\u7684\u975e 172.16.0.0 \u7684\u6d41\u91cf</p> <pre><code>access-list  101  deny    tcp  172.16.0.0  0.0.255.255  172.16.3.0  0.0.0.255  eq 20\naccess-list  101  deny    tcp  172.16.0.0  0.0.255.255  172.16.3.0  0.0.0.255  eq 21\naccess-list  101  permit  ip   172.16.0.0  0.0.255.255  172.16.3.0  0.0.0.255\ninterface E0\nip access-group 101 out\n</code></pre> <p>\u5176\u4e2d\u524d\u4e24\u884c\u53ef\u5408\u5e76\u4e3a\u4e00\u884c\uff1a</p> <pre><code>access-list  101  deny    tcp  172.16.0.0  0.0.255.255  172.16.3.0  0.0.0.255  range 20-21\n</code></pre> <p>5\u3001\u5728 172.16.3.0 \u4e0a\u62d2\u7edd\u6765\u81ea 172.16.4.13 \u7684 SSH \u6d41\u91cf\uff0c\u5728 172.16.3.0 \u4e0a\u62d2\u7edd\u975e 172.16.0.0 \u7684\u6d41\u91cf</p> <pre><code>access-list  102  deny    tcp  172.16.4.13  0.0.0.0      172.16.3.0   0.0.0.255  eq 22\naccess-list  102  permit  ip   172.16.0.0   0.0.255.255  172.16.3.0   0.0.0.255\ninterface E0\nip access-group 102 out\n</code></pre>"},{"location":"%E6%96%87%E7%AB%A0/ACLs/#2","title":"\u793a\u4f8b 2","text":"<p>1\u3001\u963b\u6b62\u4ece 192.168.2.0 \u5230 192.168.1.0 \u7684\u6d41\u91cf\uff08\u5fc5\u987b\u5141\u8bb8\u6240\u6709\u5176\u4ed6\u6d41\u91cf\uff09</p> <pre><code>access-list  1  deny    192.168.2.0  0.0.0.255\naccess-list  1  permit  any\nToronto # interface E0\nip access-group 1 out\n</code></pre> <p>2\u3001\u963b\u6b62\u4ece 192.168.4.1 \u5230 192.168.2.0 \u7684\u6d41\u91cf\uff08\u5fc5\u987b\u5141\u8bb8\u6240\u6709\u5176\u4ed6\u6d41\u91cf\uff09</p> <pre><code>access-list  2   deny   192.168.4.1  0.0.0.0\naccess-list  2   permit any\nHalifax # interface E0\nip access-group 2 out\n</code></pre> <p>3\u3001\u6765\u81ea 192.168.4.0 \u7684\u6d41\u91cf\u5fc5\u987b\u4e0d\u80fd\u7ecf\u8fc7 192.168.3.0</p> <pre><code>access-list 3 deny   192.168.4.0  0.0.0.255\naccess-list 3 permit any\nCalgary # interface S1\nip access-group 3 out\nHalifax # interface S0\nip access-group 3 out\n</code></pre> <p>4\u3001\u963b\u6b62\u6240\u6709\u4ece 192.168.4.1 \u5230 192.168.1.1 \u7684 SSH \u6d41\u91cf\uff08\u5fc5\u987b\u5141\u8bb8\u6240\u6709\u5176\u4ed6\u6d41\u91cf\uff09</p> <pre><code>access-list 101 deny   tcp  192.168.4.1  0.0.0.0  192.168.1.1  0.0.0.0 eq 22\naccess-list 101 permit ip   any          any\nCalgary # interface E0\nip access-group 101 in\n</code></pre> <p>5\u3001\u963b\u6b62\u6240\u6709\u4ece 192.168.1.1 \u5230 192.168.2.0 \u7684 FTP \u6d41\u91cf\uff08\u5fc5\u987b\u5141\u8bb8\u6240\u6709\u5176\u4ed6\u6d41\u91cf\uff09</p> <pre><code>access-list 102  deny   tcp  192.168.1.1  0.0.0.0  192.168.2.0  0.0.0.255 range 20-21\naccess-list 102  permit ip  any any\nToronto # interface E0\nip access-group 102 in\n</code></pre> <p>6\u3001\u5141\u8bb8\u4ece 192.168.1.1 \u5230 192.168.4.1 \u7684 SNMP \u6d41\u91cf\uff0c\u5141\u8bb8\u4ece 192.168.4.1 \u5230 192.168.1.1 \u7684 HTTP \u6d41\u91cf\uff0c\u4e4b\u95f4\u4e0d\u5141\u8bb8\u5176\u4ed6\u7684\u6d41\u91cf\uff08SNMP \u7aef\u53e3 161\uff0cHTTP \u7aef\u53e3 80\uff09</p> <pre><code>access-list 103 permit udp 192.168.1.1 0.0.0.0   192.168.4.1 0.0.0.0   eq 161\naccess-list 103 permit tcp 192.168.4.1 0.0.0.0   192.168.1.1 0.0.0.0   eq 80\naccess-list 103 deny   ip  192.168.1.0 0.0.0.255 192.168.4.0 0.0.0.255\naccess-list 103 deny   ip  192.168.4.0 0.0.0.255 192.168.1.0 0.0.0.255\naccess-list 103 permit ip  any         any\nToronto # interface E0\nip access-group 103 in\nCalgary # interface E0\nip access-group 103 in\n\n</code></pre>"},{"location":"%E6%96%87%E7%AB%A0/ACLs/#_3","title":"\u53c2\u8003\u6587\u7ae0","text":"<p>[1] \u8bbf\u95ee\u63a7\u5236\u5217\u8868</p>"},{"location":"%E6%96%87%E7%AB%A0/DiningPhilosophers/","title":"\u54f2\u5b66\u5bb6\u5c31\u9910\uff1a\u6b7b\u9501\u53ca\u89e3\u51b3\u65b9\u6848 Java","text":"<p>\u54f2\u5b66\u5bb6\u5c31\u9910\u95ee\u9898\u662f\u8ba1\u7b97\u673a\u79d1\u5b66\u4e2d\u7684\u4e00\u4e2a\u7ecf\u5178\u95ee\u9898\uff0c1971 \u5e74\u7531\u8377\u5170\u8ba1\u7b97\u673a\u79d1\u5b66\u5bb6\u827e\u5179\u683c\u00b7\u8fea\u79d1\u65af\u5f7b\u63d0\u51fa\uff0c\u4e94\u53f0\u8ba1\u7b97\u673a\u90fd\u8bd5\u56fe\u8bbf\u95ee\u4e94\u4efd\u5171\u4eab\u7684\u78c1\u5e26\u65f6\u4f1a\u4ea7\u751f\u95ee\u9898\uff0c\u540e\u6765\u4e1c\u5c3c\u00b7\u970d\u5c14\u5c06\u5176\u91cd\u65b0\u8868\u8ff0\u4e3a\u54f2\u5b66\u5bb6\u5c31\u9910\u95ee\u9898[1]\u3002\u95ee\u9898\u7684\u8be6\u7ec6\u63cf\u8ff0\u53ef\u4ee5\u53c2\u8003 \u94fe\u63a5\u3002</p> <p>\u901a\u4fd7\u6765\u8bb2\uff0c\u5c31\u662f\u6709\u4e94\u4e2a\u54f2\u5b66\u5bb6\uff0c\u548c\u4e94\u4e2a\u9910\u53c9\uff0c\u6bcf\u4e2a\u54f2\u5b66\u5bb6\u4e4b\u95f4\u6709\u4e00\u4e2a\u9910\u53c9\u3002</p> <ul> <li>\u6bcf\u4e2a\u54f2\u5b66\u5bb6\u8981\u4e48\u5904\u4e8e\u601d\u8003\u72b6\u6001\uff0c\u8981\u4e48\u5904\u4e8e\u5c31\u9910\u72b6\u6001</li> <li>\u5c31\u9910\u65f6\u603b\u662f\u5148\u62ff\u8d77\u5de6\u8fb9\u7684\u9910\u53c9\uff0c\u540e\u62ff\u8d77\u53f3\u8fb9\u7684\u9910\u53c9</li> <li>\u6bcf\u4e2a\u54f2\u5b66\u5bb6\u53ea\u80fd\u62ff\u5de6\u53f3\u4e24\u8fb9\u7684\u9910\u53c9\uff0c\u4e0d\u80fd\u62ff\u5176\u4ed6\u9910\u53c9</li> <li>\u53ea\u6709\u4e24\u4e2a\u9910\u53c9\u90fd\u62ff\u5230\u65f6\u624d\u53ef\u4ee5\u5c31\u9910</li> <li>\u5c31\u9910\u7ed3\u675f\u540e\u5148\u653e\u4e0b\u5de6\u8fb9\u7684\u9910\u53c9\uff0c\u540e\u653e\u4e0b\u53f3\u8fb9\u7684\u9910\u53c9\uff0c\u90fd\u653e\u4e0b\u540e\u8fdb\u5165\u601d\u8003\u72b6\u6001</li> </ul> <p>\u95ee\u9898\u5728\u4e8e\u5982\u4f55\u8bbe\u8ba1\uff0c\u80fd\u591f\u5728\u6bcf\u4e2a\u54f2\u5b66\u5bb6\u4e0d\u77e5\u9053\u5176\u4ed6\u4eba\u5728\u601d\u8003\u6216\u5c31\u9910\u65f6\uff0c\u90fd\u80fd\u5728\u601d\u8003\u548c\u5c31\u9910\u4e4b\u95f4\u65e0\u9650\u5faa\u73af\uff0c\u800c\u4e0d\u4f1a\u53d1\u751f\u65e0\u9650\u7b49\u5f85\u7684\u60c5\u51b5\uff0c\u5373\u6b7b\u9501\u3002</p>"},{"location":"%E6%96%87%E7%AB%A0/DiningPhilosophers/#_1","title":"\u6b7b\u9501\u7684\u4ea7\u751f","text":"<p>\u5176\u5b9e\u54f2\u5b66\u5bb6\u5c31\u9910\u95ee\u9898\u63cf\u8ff0\u7684\u5c31\u662f\u8ba1\u7b97\u673a\u4e2d\u7684\u6b7b\u9501\u95ee\u9898\u3002\u90a3\u4e48\u6b7b\u9501\u662f\u600e\u4e48\u4ea7\u751f\u7684\u5462\uff1f</p> <p>\u4e94\u4e2a\u54f2\u5b66\u5bb6\u540c\u65f6\u62ff\u8d77\u5de6\u8fb9\u7684\u9910\u53c9\uff0c\u7136\u540e\u51c6\u5907\u540c\u65f6\u62ff\u53f3\u8fb9\u9910\u53c9\u65f6\uff0c\u53d1\u751f\u6b7b\u9501\u3002\u56e0\u4e3a\u8fd9\u65f6\u6bcf\u4e2a\u54f2\u5b66\u5bb6\u90fd\u60f3\u5728\u7b49\u5728\u53f3\u8fb9\u7684\u9910\u53c9\u800c\u65e0\u6cd5\u5403\u996d\u3002</p>"},{"location":"%E6%96%87%E7%AB%A0/DiningPhilosophers/#_2","title":"\u89e3\u51b3\u65b9\u6848","text":"<p>\u4e2a\u4eba\u603b\u7ed3\u4e0b\u6765\uff0c\u89e3\u51b3\u8fd9\u7c7b\u95ee\u9898\u4e3b\u8981\u6709\u4e24\u4e2a\u601d\u8def\uff1a\u4e92\u65a5\u548c\u987a\u5e8f\u3002</p> <p>\u4e92\u65a5\u5c31\u662f\u5bf9\u4e8e\u4e00\u4e2a\u5171\u4eab\u8d44\u6e90\uff0c\u5f53\u4e00\u4e2a\u7ebf\u7a0b\u5360\u6709\u8be5\u8d44\u6e90\u7684\u9501\u65f6\uff0c\u5176\u4ed6\u7ebf\u7a0b\u4e0d\u80fd\u5360\u6709\u8be5\u8d44\u6e90\u7684\u9501\u3002\u987a\u5e8f\u5c31\u662f\u83b7\u53d6\u591a\u4e2a\u9501\u65f6\uff0c\u5c3d\u91cf\u6309\u7167\u5148\u540e\u987a\u5e8f\u83b7\u53d6\uff0c\u907f\u514d\u4ea4\u53c9\u3002</p> <p>\u57fa\u4e8e\u4ee5\u4e0a\u4e24\u4e2a\u601d\u8def\uff0c\u6709\u4e00\u4e9b\u901a\u7528\u7684\u89e3\u51b3\u65b9\u6848\u4f9b\u6211\u4eec\u5b66\u4e60\u3002</p>"},{"location":"%E6%96%87%E7%AB%A0/DiningPhilosophers/#dijkstra","title":"Dijkstra \u7b97\u6cd5","text":"<p>Dijkstra \u7684\u89e3\u51b3\u65b9\u6848\u662f\u6bcf\u4e2a\u54f2\u5b66\u5bb6\u7ef4\u62a4\u4e09\u4e2a\u72b6\u6001\uff1aTHINKING\uff0cHUNGRY\uff0cEATING\uff0c\u4ee5\u53ca\u5404\u81ea\u7684\u4fe1\u53f7\u91cf\u3002\u6bcf\u4e2a\u54f2\u5b66\u5bb6\u5bf9\u5e94\u7684\u4fe1\u53f7\u91cf\u4ee3\u8868\u5de6\u53f3\u4e24\u4e2a\u9910\u53c9\u662f\u5426\u53ef\u4ee5\u88ab\u62ff\u8d77\u6765\u3002Java \u4ee3\u7801\u5b9e\u73b0\u5982\u4e0b\uff1a</p> <pre><code>import java.util.Random;\nimport java.util.concurrent.Semaphore;\nimport java.util.concurrent.TimeUnit;\n\npublic class DiningPhilosophersDijkstra {\n\n    private static final int N = 5;\n\n    private enum State {THINKING, HUNGRY, EATING}\n\n    private static State[] state = new State[N];\n    private static final Object[] forks = new Object[N];\n    private static Semaphore[] bothForksAvailable = new Semaphore[N];\n\n    static {\n        for (int i = 0; i &lt; N; i++) {\n            state[i] = State.THINKING;\n            forks[i] = new Object();\n            bothForksAvailable[i] = new Semaphore(0);\n        }\n    }\n\n    private static int left(int i) {\n        return (i - 1 + N) % N;\n    }\n\n    private static int right(int i) {\n        return (i + 1) % N;\n    }\n\n    private static int myRand(int min, int max) {\n        Random rnd = new Random();\n        return rnd.nextInt(max - min + 1) + min;\n    }\n\n    private static void test(int i) {\n        if (state[i] == State.HUNGRY &amp;&amp;\n                state[left(i)] != State.EATING &amp;&amp;\n                state[right(i)] != State.EATING) {\n            state[i] = State.EATING;\n            bothForksAvailable[i].release();\n        }\n    }\n\n    private static void think(int i) throws InterruptedException {\n        int duration = myRand(400, 800);\n        System.out.println(i + \" is thinking \" + duration + \"ms\");\n        TimeUnit.MILLISECONDS.sleep(duration);\n    }\n\n    private static void takeForks(int i) throws InterruptedException {\n        synchronized (forks[i]) {\n            state[i] = State.HUNGRY;\n            System.out.println(\"\\t\\t\" + i + \" is HUNGRY\");\n            test(i);\n        }\n        bothForksAvailable[i].acquire();\n    }\n\n    private static void eat(int i) throws InterruptedException {\n        int duration = myRand(400, 800);\n        System.out.println(\"\\t\\t\\t\\t\" + i + \" is eating \" + duration + \"ms\");\n        TimeUnit.MILLISECONDS.sleep(duration);\n    }\n\n    private static void putForks(int i) {\n        synchronized (forks[i]) {\n            state[i] = State.THINKING;\n            test(left(i));\n            test(right(i));\n        }\n    }\n\n    private static void philosopher(int i) {\n        while (true) {\n            try {\n                think(i);\n                takeForks(i);\n                eat(i);\n                putForks(i);\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"dp_14\");\n\n        Thread t0 = new Thread(() -&gt; philosopher(0));\n        Thread t1 = new Thread(() -&gt; philosopher(1));\n        Thread t2 = new Thread(() -&gt; philosopher(2));\n        Thread t3 = new Thread(() -&gt; philosopher(3));\n        Thread t4 = new Thread(() -&gt; philosopher(4));\n\n        t0.start();\n        t1.start();\n        t2.start();\n        t3.start();\n        t4.start();\n    }\n}\n</code></pre>"},{"location":"%E6%96%87%E7%AB%A0/DiningPhilosophers/#_3","title":"\u5171\u4eab\u8d44\u6e90\u4f18\u5148\u7ea7\u7b97\u6cd5","text":"<p>\u987e\u540d\u601d\u4e49\u5c31\u662f\u5bf9\u9910\u53c9\u5212\u5206\u4e00\u4e2a\u4f18\u5148\u7ea7\uff0c\u5fc5\u987b 0\uff5e4\uff0c\u6bcf\u4e2a\u54f2\u5b66\u5bb6\u53ea\u80fd\u5148\u62ff\u4f18\u5148\u7ea7\u5c0f\u7684\u9910\u53c9\uff0c\u540e\u62ff\u4f18\u5148\u7ea7\u5927\u7684\u9910\u53c9\u3002\u5982\u679c 4 \u4e2a\u54f2\u5b66\u5bb6\u540c\u65f6\u62ff\u8d77\u5de6\u8fb9\u7f16\u53f7\u8f83\u5c0f\u7684\u9910\u53c9\uff0c\u7b2c 5 \u4e2a\u54f2\u5b66\u5bb6\u5de6\u8fb9\u662f\u4f18\u5148\u7ea7 4\uff0c\u53f3\u8fb9\u662f\u4f18\u5148\u7ea7 0\uff0c\u56e0\u4e3a 0 \u5df2\u7ecf\u88ab\u5360\u7528\u4e86\uff0c\u6240\u4ee5\u4ed6\u65e0\u6cd5\u62ff\u8d77\u9910\u53c9\uff0c\u56e0\u6b64\u4e0d\u4f1a\u53d1\u751f\u6b7b\u9501\u3002\u8fd9\u91cc\u4e5f\u8fd0\u7528\u4e86\u987a\u5e8f\u7684\u601d\u60f3\u3002</p> <p>\u4f46\u662f\u8fd9\u4e2a\u65b9\u6848\u6709\u4e24\u4e2a\u95ee\u9898\uff1a</p> <ol> <li>\u5982\u679c\u4e00\u4e2a\u5de5\u4f5c\u5355\u5143\u6301\u6709 3 \u548c 5\uff0c\u9700\u8981\u8d44\u6e90 2\uff0c\u9700\u8981\u4ee5\u4e0b\u64cd\u4f5c\uff1a<ul> <li>\u91ca\u653e 5</li> <li>\u91ca\u653e 3</li> <li>\u83b7\u53d6 2</li> <li>\u83b7\u53d6 3</li> <li>\u83b7\u53d6 5</li> </ul> </li> <li>\u6bcf\u4e2a\u54f2\u5b66\u5bb6\u4e0d\u80fd\u516c\u5e73\u5730\u83b7\u53d6\u5230\u9910\u53c9\uff0c\u5982\u679c\u54f2\u5b66\u5bb6 1 \u62ff\u9910\u53c9\u7684\u901f\u5ea6\u5f88\u6162\uff0c\u54f2\u5b66\u5bb6 2 \u601d\u8003\u901f\u5ea6\u5f88\u5feb\uff0c\u6bcf\u6b21\u90fd\u4f1a\u5f88\u5feb\u628a\u9910\u53c9\u62ff\u8d77\u6765\uff0c\u90a3\u4e48\u54f2\u5b66\u5bb6 1 \u6c38\u8fdc\u4e0d\u80fd\u62ff\u8d77\u53f3\u624b\u8fb9\u7684\u9910\u53c9</li> </ol> <p>Java \u4ee3\u7801\u5b9e\u73b0\uff1a</p> <pre><code>import java.util.Random;\nimport java.util.concurrent.locks.Lock;\nimport java.util.concurrent.locks.ReentrantLock;\n\npublic class DiningPhilosophersResourceHierarchy {\n\n    static Random rnd = new Random();\n\n    static int myRand(int min, int max) {\n        return rnd.nextInt(max - min + 1) + min;\n    }\n\n    static void philosopher(int ph, Lock ma, Lock mb, Lock mo) {\n        while (true) {\n            int duration = myRand(200, 800);\n            synchronized (mo) {\n                System.out.println(ph + \" thinks \" + duration + \"ms\");\n            }\n            try {\n                Thread.sleep(duration);\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n            synchronized (mo) {\n                System.out.println(\"\\t\\t\" + ph + \" is hungry\");\n            }\n            synchronized (ma) {\n                synchronized (mb) {\n                    duration = myRand(200, 800);\n                    synchronized (mo) {\n                        System.out.println(\"\\t\\t\\t\\t\" + ph + \" eats \" + duration + \"ms\");\n                    }\n                    try {\n                        Thread.sleep(duration);\n                    } catch (InterruptedException e) {\n                        e.printStackTrace();\n                    }\n                }\n            }\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"dining Philosophers C++11 with Resource hierarchy\");\n        Lock m1 = new ReentrantLock();\n        Lock m2 = new ReentrantLock();\n        Lock m3 = new ReentrantLock();\n        Lock m4 = new ReentrantLock();\n        Lock m5 = new ReentrantLock();\n        Lock mo = new ReentrantLock();\n\n        Thread t1 = new Thread(() -&gt; philosopher(1, m1, m2, mo));\n        Thread t2 = new Thread(() -&gt; philosopher(2, m2, m3, mo));\n        Thread t3 = new Thread(() -&gt; philosopher(3, m3, m4, mo));\n        Thread t4 = new Thread(() -&gt; philosopher(4, m4, m5, mo));\n        Thread t5 = new Thread(() -&gt; philosopher(5, m1, m5, mo));\n\n        t1.start();\n        t2.start();\n        t3.start();\n        t4.start();\n        t5.start();\n\n        try {\n            t1.join();\n            t2.join();\n            t3.join();\n            t4.join();\n            t5.join();\n        } catch (InterruptedException e) {\n            e.printStackTrace();\n        }\n    }\n}\n</code></pre>"},{"location":"%E6%96%87%E7%AB%A0/DiningPhilosophers/#chandy-misra","title":"Chandy-Misra \u7b97\u6cd5","text":"<p>\u8fd9\u4e2a\u7b97\u6cd5\u53ef\u4ee5\u5f88\u597d\u5730\u907f\u514d\u6b7b\u9501\u7684\u53d1\u751f\uff0c\u5177\u4f53\u6d41\u7a0b\u662f\uff1a</p> <ol> <li>\u6bcf\u4e2a\u9910\u53c9\u6709\u4e2a\u72b6\u6001\uff0c\u810f\u6216\u8005\u5e72\u51c0\uff0c\u521d\u59cb\u6240\u6709\u7684\u9910\u53c9\u90fd\u662f\u810f\u7684</li> <li>\u6bcf\u4e2a\u54f2\u5b66\u5bb6\u53ea\u4f1a\u83b7\u53d6\u5de6\u53f3\u54f2\u5b66\u624b\u4e2d\u7684\u9910\u53c9\uff0c\u6bcf\u6b21\u5c1d\u8bd5\u83b7\u53d6\u5de6\u53f3\u4e24\u4e2a\u9910\u53c9\uff0c\u5982\u679c\u67d0\u4e2a\u9910\u53c9\u88ab\u5360\u7528\uff0c\u5219\u5411\u5bf9\u5e94\u7684\u54f2\u5b66\u5bb6\u53d1\u9001\u4e00\u4e2a\u6d88\u606f</li> <li>\u54f2\u5b66\u5bb6\u6536\u5230\u6d88\u606f\uff0c\u5982\u679c\u9910\u53c9\u662f\u5e72\u51c0\u7684\uff0c\u5219\u4e0d\u7406\u4f1a\uff1b\u5982\u679c\u662f\u810f\u7684\uff0c\u5219\u64e6\u5e72\u51c0\u5e76\u4ea4\u51fa\u9910\u53c9</li> <li>\u54f2\u5b66\u5bb6\u5403\u5b8c\u540e\u9910\u53c9\u5c31\u53d8\u810f\u4e86\uff0c\u5982\u679c\u8fd9\u65f6\u6709\u54f2\u5b66\u5bb6\u8bf7\u6c42\uff0c\u5c31\u64e6\u5e72\u51c0\u5e76\u4ea4\u51fa\u9910\u53c9</li> </ol> <p>Java \u5b9e\u73b0\u5982\u4e0b\uff1a</p> <pre><code>import java.util.concurrent.locks.Lock;\nimport java.util.concurrent.locks.ReentrantLock;\n\n/**\n * forks:\n * 0 x 1 x 2 x 3 x 4 x\n * philosophers:\n * x 0 x 1 x 2 x 3 x 4\n */\npublic class DiningPhilosophersChandyMisra {\n    private final int NP;\n    private final Lock[] forks;\n    private final boolean[] dirty;\n    private final boolean[] hungry;\n\n    public DiningPhilosophersChandyMisra(int NP) {\n        this.NP = NP;\n        this.forks = new Lock[NP];\n        this.dirty = new boolean[NP];\n        this.hungry = new boolean[NP];\n        for (int i = 0; i &lt; NP; i++) {\n            this.hungry[i] = true;\n            this.forks[i] = new ReentrantLock();\n            this.dirty[i] = true;\n        }\n    }\n\n    private int leftFork(int p) {\n        return p;\n    }\n\n    private int rightFork(int p) {\n        return (p + 1) % NP;\n    }\n\n    private int leftPhilosopher(int p) {\n        return (p - 1) % NP;\n    }\n\n    private int rightPhilosopher(int p) {\n        return (p + 1) % NP;\n    }\n\n    private void think(int p) {\n        System.out.println(Thread.currentThread().getName() + \": philosopher \" + p + \" is thinking.\");\n        hungry[p] = true;\n    }\n\n    private void eat(int p) {\n        System.out.println(Thread.currentThread().getName() + \": philosopher \" + p + \" is eating.\");\n        forks[leftFork(p)].unlock();\n        forks[rightFork(p)].unlock();\n        hungry[p] = false;\n    }\n\n    private boolean obtainBothForks(int p) {\n        boolean leftForkAcquired = forks[leftFork(p)].tryLock();\n        boolean rightForkAcquired = forks[rightFork(p)].tryLock();\n        if (leftForkAcquired &amp;&amp; rightForkAcquired) {\n            return true;\n        } else {\n            if (leftForkAcquired) {\n                forks[leftFork(p)].unlock();\n            } else {\n                receiveRequest(leftPhilosopher(p), true);\n            }\n\n            if (rightForkAcquired) {\n                forks[rightFork(p)].unlock();\n            } else {\n                receiveRequest(rightPhilosopher(p), false);\n            }\n            return false;\n        }\n    }\n\n    private void receiveRequest(int p, boolean rightFork) {\n        int forkId = rightFork ? rightFork(p) : leftFork(p);\n        if (!dirty[forkId]) {\n            return;\n        }\n\n        dirty[forkId] = false;\n        if (forks[forkId].tryLock()) {\n            forks[forkId].unlock();\n        }\n    }\n\n    public void startDining() {\n        Thread[] philosophers = new Thread[NP];\n        for (int i = 0; i &lt; NP; i++) {\n            final int philosopherId = i;\n            philosophers[i] = new Thread(() -&gt; {\n                while (true) {\n                    if (obtainBothForks(philosopherId) &amp;&amp; hungry[philosopherId]) {\n                        eat(philosopherId);\n                    } else {\n                        think(philosopherId);\n                    }\n                }\n            });\n            philosophers[i].start();\n        }\n    }\n\n    public static void main(String[] args) {\n        int NP = 5;\n        DiningPhilosophersChandyMisra diningPhilosophersChandyMisra = new DiningPhilosophersChandyMisra(NP);\n        diningPhilosophersChandyMisra.startDining();\n    }\n\n}\n</code></pre>"},{"location":"%E6%96%87%E7%AB%A0/DiningPhilosophers/#_4","title":"\u670d\u52a1\u751f\u89e3\u6cd5","text":"<p>\u670d\u52a1\u751f\u89e3\u6cd5\u5c31\u662f\u5f15\u5165\u670d\u52a1\u751f\uff0c\u6bcf\u6b21\u5fc5\u987b\u7ecf\u8fc7\u670d\u52a1\u751f\u7684\u5141\u8bb8\u540e\u624d\u80fd\u83b7\u53d6\u9910\u53c9\u3002\u56e0\u4e3a\u670d\u52a1\u751f\u77e5\u9053\u5f53\u524d\u54ea\u4e2a\u9910\u53c9\u6b63\u5728\u88ab\u4f7f\u7528\uff0c\u6240\u4ee5\u53ef\u4ee5\u907f\u514d\u6b7b\u9501\u53d1\u751f\u3002</p> <p>\u5047\u5982\u5f53\u524d\u6709 0\uff5e4 \u4e94\u4e2a\u54f2\u5b66\u5bb6\uff0c0,2 \u6b63\u5728\u5403\u996d\uff0c\u8fd9\u65f6 1 \u7531\u4e8e\u4e24\u4e2a\u9910\u53c9\u90fd\u88ab\u5360\u7528\u800c\u65e0\u6cd5\u5403\u996d\uff0c\u5bf9\u4e8e 3\uff0c\u5982\u679c\u8fd9\u65f6\u62ff\u8d77\u5269\u4f59\u7684\u4e00\u53ea\u9910\u53c9\uff0c\u5c31\u6709\u53ef\u80fd\u53d1\u751f\u6b7b\u9501\u3002\u5982\u679c\u5f15\u5165\u670d\u52a1\u751f\uff0c\u5219\u670d\u52a1\u751f\u4f1a\u8ba9 3 \u7b49\u5f85\uff0c\u76f4\u5230\u4e24\u53ea\u9910\u53c9\u90fd\u53ef\u7528\u65f6\u624d\u53bb\u62ff\u3002</p> <p>\u4f46\u662f\u8fd9\u91cc\u6211\u4e00\u76f4\u4e0d\u592a\u7406\u89e3\u7684\u662f\uff0c\u4e3a\u4ec0\u4e48 3 \u4f1a\u62ff\u8d77\u53f3\u8fb9\u7684\u9910\u53c9\uff1f3 \u7b49\u5f85 2 \u5403\u5b8c\u540e\u5148\u62ff\u5de6\u8fb9\u7684\u9910\u53c9\uff0c\u518d\u62ff\u53f3\u8fb9\u7684\u9910\u53c9\u4e0d\u5c31\u597d\u4e86\u5417\uff1f\u5e0c\u671b\u6709\u61c2\u5f97\u5927\u4f6c\u5e2e\u5fd9\u89e3\u91ca\u4e0b\u3002</p>"},{"location":"%E6%96%87%E7%AB%A0/DiningPhilosophers/#_5","title":"\u9650\u5236\u5c31\u9910\u4eba\u6570","text":"<p>\u8fd9\u4e2a\u601d\u8def\u548c\u670d\u52a1\u751f\u89e3\u6cd5\u7c7b\u4f3c\uff0c\u53ea\u662f\u65b9\u5f0f\u4e0d\u540c\u3002\u8fd9\u79cd\u65b9\u5f0f\u8981\u6c42\u6bcf\u6b21\u53ea\u80fd\u6709 <code>n-1</code> \u4e2a\u54f2\u5b66\u5bb6\u5c31\u9910\uff0c\u8fd9\u6837\u6bcf\u6b21\u90fd\u4f1a\u5269\u4f59\u4e00\u4e2a\u54f2\u5b66\u5bb6\u5904\u4e8e\u7b49\u5f85\u72b6\u6001\uff0c\u5f53\u6709\u4e00\u4e2a\u54f2\u5b66\u5bb6\u5403\u5b8c\u65f6\u4ed6\u624d\u80fd\u505a\u4e0b\u5c31\u9910\u3002</p>"},{"location":"%E6%96%87%E7%AB%A0/DiningPhilosophers/#_6","title":"\u603b\u7ed3","text":"<p>\u5b66\u4e60\u6280\u672f\u65f6\u8981\u4ece\u6839\u6e90\u5b66\u8d77\uff0c\u6587\u6863\u4e5f\u6700\u597d\u8ffd\u6eaf\u5230\u539f\u7248\u82f1\u6587\u7684\u6587\u6863\u3002\u54f2\u5b66\u5bb6\u5c31\u9910\u95ee\u9898\u5c5e\u4e8e\u7ecf\u5178\u7684\u6b7b\u9501\u95ee\u9898\uff0c\u6240\u4ee5\u6709\u5fc5\u8981\u597d\u597d\u5b66\u4e60\u4e00\u756a\u3002wiki \u4e2d\u7684\u82f1\u6587\u6587\u6863\u4ecb\u7ecd\u5f97\u975e\u5e38\u8be6\u7ec6\uff0c\u6211\u8fd9\u91cc\u53ea\u662f\u629b\u7816\u5f15\u7389\u4e86\uff0c\u9664\u6b64\u4e4b\u5916\uff0cwiki \u4e2d\u5f15\u7528\u7684\u53c2\u8003\u6587\u732e\u90fd\u662f\u6df1\u5165\u4e86\u89e3\u6b7b\u9501\u548c\u54f2\u5b66\u5bb6\u5c31\u9910\u95ee\u9898\u7684\u6781\u597d\u6750\u6599\u3002</p>"},{"location":"%E6%96%87%E7%AB%A0/DiningPhilosophers/#_7","title":"\u53c2\u8003\u8d44\u6599","text":"<ol> <li>\u54f2\u5b66\u5bb6\u5c31\u9910\u95ee\u9898 wiki</li> <li>\u7ecf\u5178\u5e76\u53d1\u95ee\u9898: \u54f2\u5b66\u5bb6\u5c31\u9910\u95ee\u9898</li> </ol>"},{"location":"%E6%96%87%E7%AB%A0/id/","title":"\u5206\u5e03\u5f0f\u5168\u5c40\u552f\u4e00 ID \u5b9e\u73b0","text":""},{"location":"%E6%96%87%E7%AB%A0/id/#twitter-snowflake","title":"\u4e00\u3001Twitter Snowflake \u7b97\u6cd5\u601d\u60f3","text":"<p>\u91c7\u7528 64 \u4f4d\u957f\u6574\u5f62\u5b9e\u73b0\uff0c\u5212\u5206\u4e3a\u56db\u4e2a\u533a\u57df\uff1a[1]</p> <ul> <li>\u7b26\u53f7\uff0c\u5360\u7528 1 \u4f4d</li> <li>\u6beb\u79d2\u7ea7\u65f6\u95f4\u6233\uff0c\u5360\u7528 41 \u4f4d</li> <li>5 \u4f4d\u6570\u636e\u4e2d\u5fc3 + 5 \u4f4d\u673a\u5668 ID\uff0c\u5360\u7528 10 \u4f4d</li> <li>\u5e8f\u5217\u53f7\uff0c\u5360\u7528 12 \u4f4d</li> </ul> <pre><code> +------+--------------------+-----------------------+----------+\n | sign | delta milliSeconds | dataCenter | workerId | sequence |\n +------+--------------------+-----------------------+----------+\n   1bit        41bits                  10bits           12bits\n</code></pre> <p>Java/Go \u5b9e\u73b0</p>"},{"location":"%E6%96%87%E7%AB%A0/id/#leaf","title":"\u4e8c\u3001\u7f8e\u56e2 Leaf \u65b9\u6848","text":"<p>Leaf\u8fd9\u4e2a\u540d\u5b57\u662f\u6765\u81ea\u5fb7\u56fd\u54f2\u5b66\u5bb6\u3001\u6570\u5b66\u5bb6\u83b1\u5e03\u5c3c\u8328\u7684\u4e00\u53e5\u8bdd\uff1a &gt;There are no two identical leaves in the world &gt; \u201c\u4e16\u754c\u4e0a\u6ca1\u6709\u4e24\u7247\u76f8\u540c\u7684\u6811\u53f6\u201d[2]\u3002\u76ee\u524dLeaf\u7684\u6027\u80fd\u57284C8G\u7684\u673a\u5668\u4e0aQPS\u80fd\u538b\u6d4b\u5230\u8fd15\u4e07/s\uff0cTP999 1ms\uff0c\u5df2\u7ecf\u80fd\u591f\u6ee1\u8db3\u5927\u90e8\u5206\u7684\u4e1a\u52a1\u7684\u9700\u6c42\u3002</p> <p>Leaf \u65b9\u6848\u5206\u4e3a\u4e24\u79cd\uff1a</p> <ul> <li>Leaf-segment\uff1a\u5229\u7528\u6570\u636e\u5e93\u81ea\u589e ID \u7279\u6027\uff0c\u6bcf\u4e2a\u673a\u5668\u83b7\u53d6\u4e0d\u540c\u5206\u6bb5\uff0c\u7136\u540e\u5728\u5404\u81ea\u5206\u6bb5\u8303\u56f4\u5185\u81ea\u589e\u3002\u5982\u673a\u5668 A 1\uff5e1000\uff0c\u673a\u5668 B 1001\uff5e2000\uff0c\u673a\u5668 C 2001\uff5e3000</li> <li>\uff1a\u57fa\u4e8e\u96ea\u82b1\u7b97\u6cd5\u601d\u60f3\uff0c\u66f4\u9002\u7528\u4e8e\u8ba2\u5355 ID\uff0c\u907f\u514d\u4e86 Leaf-segment \u53ef\u4ee5\u63a8\u7b97\u51fa\u8ba2\u5355\u91cf\u7684\u95ee\u9898\u3002</li> </ul>"},{"location":"%E6%96%87%E7%AB%A0/id/#leaf-segment","title":"Leaf-segment","text":"<p>\u4ee5\u4e0b\u662f\u7f8e\u56e2\u5b98\u65b9\u67b6\u6784\u56fe\uff1a</p> <p></p> <p>\u4e3b\u8981\u601d\u60f3\u5728\u670d\u52a1\u5c42\u548c DB Server \u4e4b\u95f4\u6dfb\u52a0 Proxy Server\uff0cProxy Server \u7684\u4f5c\u7528\u662f\u6279\u91cf\u4ece DB Server \u83b7\u53d6 segment\uff08\u5927\u5c0f\u4e3a step\uff09\u53f7\u6bb5\u7684\u503c\uff0c\u7528\u5b8c\u4e4b\u540e\u518d\u53bb\u6570\u636e\u5e93\u83b7\u53d6\u65b0\u7684\u53f7\u6bb5\u3002\u8fd9\u6837\u80fd\u6781\u5927\u51cf\u5c0f\u8bf7\u6c42 DB \u7684\u6b21\u6570\uff0c\u8bfb\u5199\u6570\u636e\u5e93\u7684\u9891\u7387\u7528 <code>1</code> \u53d8\u6210\u4e86 <code>1 / step</code>\u3002</p> <p>DB Server \u8868\u8bbe\u8ba1</p> Field Type Null Key Default Extra biz_tag varchar(128) NO PRI max_id bigint(20) NO 1 step int(11) NO NULL desc varchar(256) YES NULL update_time timestamp NO CURRENT_TIMESTAMP on update CURRENT_TIMESTAMP <p>biz_tag \u7528\u6765\u533a\u5206\u4e1a\u52a1\uff0cmax_id \u4ee3\u8868\u5f53\u524d\u4e1a\u52a1\u53f7\u6bb5\u7684\u6700\u5927 ID\uff0cstep \u4ee3\u8868\u6b65\u957f\uff0c\u6bd4\u5982\u4e00\u6b21\u53d6 1000 \u4e2a ID\uff0cstep = 1000\u3002</p> <p>\u66f4\u65b0\u53f7\u6bb5\u7684 SQL</p> <p>\u5982\u4e0a\u56fe\uff0c\u5047\u5982 <code>biz_tag</code> \u4e3a <code>test</code> \u7684\u4e1a\u52a1\u5728 Leaf1 \u7684\u53f7\u6bb5\u662f 1\uff5e1000\uff0c\u5f53\u8fd9\u4e2a\u53f7\u6bb5\u7528\u5b8c\u4e86\uff0c\u4f46 Leaf2\u3001Leaf3 \u90fd\u6ca1\u6709\u66f4\u65b0\uff0c\u8fd9\u65f6\u4f1a\u4ece DB Server \u8bf7\u6c42\u66f4\u65b0\u53f7\u6bb5\u4e3a 3001\uff5e4000\uff0cDB Server \u4e2d\u7684 <code>max_id</code> \u4f1a\u66f4\u65b0\u4e3a 4000\uff0c\u66f4\u65b0\u7684 SQL \u5982\u4e0b\uff1a </p> <pre><code>Begin\nUPDATE table SET max_id = max_id + step WHERE biz_tag = xxx\nSELECT tag, max_id, step FROM table WHERE biz_tag = xxx\nCommit\n</code></pre> <p>\u4f18\u70b9</p> <ul> <li>Leaf \u670d\u52a1\u53ef\u4ee5\u5f88\u65b9\u4fbf\u5730\u7ebf\u7a0b\u62d3\u5c55</li> <li>ID \u662f 8 bit 64\u4f4d\u6570\u5b57\uff0c\u7b26\u5408\u4e3b\u952e\u8981\u6c42</li> <li>\u5bb9\u707e\u6027\u9ad8\uff1aLeaf \u670d\u52a1\u5185\u90e8\u6709\u7f13\u5b58\uff0c\u5373\u4f7f DB Server \u6302\u6389\u4e86\uff0cLeaf \u670d\u52a1\u5728\u53f7\u7801\u6bb5\u7528\u5c3d\u524d\u4ecd\u7136\u80fd\u7ee7\u7eed\u63d0\u4f9b\u670d\u52a1</li> <li>\u53ef\u4ee5\u81ea\u5b9a\u4e49 max_id \u5927\u5c0f\uff0c\u65b9\u4fbf\u670d\u52a1\u8fc1\u79fb</li> </ul> <p>\u7f3a\u70b9</p> <ul> <li>ID \u4e0d\u591f\u968f\u673a\uff0c\u6709\u6cc4\u9732 ID \u6570\u91cf\u7684\u98ce\u9669</li> <li>\u53f7\u6bb5\u7528\u5b8c\u65f6\u66f4\u65b0 DB Server \u4ecd\u7136\u4f1a\u963b\u585e\u7ebf\u7a0b\uff0ctg999 \u4f1a\u51fa\u73b0\u7a81\u523a</li> <li>DB Server \u6302\u6389\u65f6\u6574\u4e2a\u7cfb\u7edf\u4f1a\u4e0d\u53ef\u7528</li> </ul> <p>\u4e3a\u4e86\u89e3\u51b3\u53d6\u53f7\u6bb5\u65f6\u963b\u585e\u7684\u95ee\u9898\uff0c\u7f8e\u56e2\u4f7f\u7528\u4e86\u53cc Buffer \u7684\u65b9\u5f0f\uff0c\u5373\u7f13\u5b58\u4e24\u4e2a\u53f7\u6bb5\u3002\u5728 Leaf \u5185\u90e8\u63d0\u524d\u83b7\u53d6\u53f7\u6bb5\uff0c\u6bd4\u5982\u5f53\u53f7\u6bb5\u4f7f\u7528\u7387\u8fbe\u5230 10% \u65f6\u5c31\u83b7\u53d6\u4e0b\u4e00\u53f7\u6bb5\u5e76\u7f13\u5b58\uff0c\u5faa\u73af\u5f80\u590d\u3002\u5177\u4f53\u53ef\u67e5\u770b\u6587\u672b\u7684\u539f\u6587\u3002</p>"},{"location":"%E6%96%87%E7%AB%A0/id/#leaf-snowflake","title":"Leaf-snowflake","text":"<p>snowflake \u7684\u601d\u8def\u4e5f\u662f\u57fa\u4e8e\u63a8\u7279\u7684\u96ea\u82b1\u7b97\u6cd5\uff0c\u5728\u6b64\u57fa\u7840\u6539\u8fdb\u5f97\u6765\uff0c\u6211\u4eec\u79f0\u4e4b\u4e3a\u7c7b\u96ea\u82b1\u7b97\u6cd5\u3002</p> <p></p> <p>\u6539\u7b97\u6cd5\u4e3b\u8981\u89e3\u51b3\u4e86\u4e24\u4e2a\u95ee\u9898\uff1a</p> <ul> <li>\u5f31\u4f9d\u8d56 Zookeeper\uff1aworkerId \u7531 Zookeeper \u751f\u6210\uff0c\u4e3a\u4e86\u907f\u514d\u5f3a\u4f9d\u8d56\u7b2c\u4e09\u65b9\u7ec4\u4ef6\uff0c\u5728\u673a\u5668\u5185\u90e8\u7f13\u5b58\u4e86 workerId \u6587\u4ef6\uff0c\u8fd9\u6837\u5373\u4f7f ZK \u6302\u4e86\u4e5f\u80fd\u6b63\u5e38\u83b7\u53d6\u5230 workerId</li> <li>\u65f6\u949f\u56de\u62e8\u95ee\u9898\uff1a\u96ea\u82b1\u7b97\u6cd5\u6d89\u53ca\u5230\u65f6\u95f4\u6233\u7684\u751f\u6210\uff0c\u5982\u679c\u673a\u5668\u65f6\u949f\u56de\u62e8\uff0c\u5219\u53ef\u80fd\u751f\u6210\u91cd\u590d ID\u3002\u6240\u4ee5\u5728 Leaf \u670d\u52a1\u542f\u52a8\u524d\uff0c\u589e\u52a0\u65f6\u949f\u56de\u62e8\u6821\u9a8c\uff0c\u5982\u679c\u786e\u5b9e\u53d1\u751f\u4e86\u56de\u62e8\uff0c\u5219 Leaf \u670d\u52a1\u542f\u52a8\u5931\u8d25</li> </ul>"},{"location":"%E6%96%87%E7%AB%A0/id/#uidgenerator","title":"\u4e09\u3001\u767e\u5ea6 UidGenerator","text":""},{"location":"%E6%96%87%E7%AB%A0/id/#_1","title":"\u53c2\u8003","text":"<ol> <li>Twitter Snowflake</li> <li>Leaf\u2014\u2014\u7f8e\u56e2\u70b9\u8bc4\u5206\u5e03\u5f0fID\u751f\u6210\u7cfb\u7edf</li> <li>\u767e\u5ea6 UidGenerator</li> <li>\u6ef4\u6ef4 Tinyid</li> </ol>"}]}